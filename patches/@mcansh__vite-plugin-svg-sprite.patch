diff --git a/dist/index.js b/dist/index.js
index a98b5cf6045c3b21c83efde86b3354d5dcf2fce2..345a0436946f2ef6be26aac6c2de7ab5f3fe0fed 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -42,7 +42,10 @@ function svgSprite(configOptions) {
   let iconsAdded = /* @__PURE__ */ new Set();
   let referenceId;
   async function addIconToSprite(id, content) {
-    if (!content) content = await fse.readFile(id, "utf-8");
+    if (!content) {
+      console.log(`reading file ${id}`);
+      content = await fse.readFile(id, "utf-8");
+    }
     let basename = path.basename(id, ".svg");
     let symbolId = options.symbolId;
     if (options.symbolId.includes("[name]")) {
@@ -186,13 +189,24 @@ function svgSprite(configOptions) {
             warn(`skipping svg file ${chunk.fileName}`);
             continue;
           }
-          let originalFileName = path.join(config.build.outDir, chunk.fileName);
+          let originalFileName = path.join(process.cwd(), config.build.outDir, chunk.fileName);
           let tempFileName = path.join(config.cacheDir, chunk.fileName);
           log({ originalFileName, tempFileName });
+          if (!await fse.pathExists(originalFileName)) {
+            originalFileName= path.join(process.cwd(), config.build.outDir, "client", chunk.fileName);
+          }
+          if (!await fse.pathExists(originalFileName)) {
+            originalFileName= path.join(process.cwd(), config.build.outDir, "server", chunk.fileName);
+          }
+          if (!await fse.pathExists(originalFileName)) {
+            continue;
+          }
           if (!await fse.pathExists(tempFileName)) {
             continue;
           }
+          console.log(`reading original file ${originalFileName}`);
           let originalContent = await fse.readFile(originalFileName, "utf-8");
+          console.log(`reading temp file ${tempFileName}`);
           let tempContent = await fse.readFile(tempFileName, "utf-8");
           let currentSpriteUrl = `/${config.build.assetsDir}/${options.spriteOutputName}`;
           let currentSpriteUrlRegex = new RegExp(currentSpriteUrl, "g");
